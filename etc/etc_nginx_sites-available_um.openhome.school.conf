server {
    listen      <1.1.1.1>:80;
    server_name <server_name>;
    charset     utf-8;

    return https://$server_name$request_uri;  # consider return 301 https://... -- that's considered SOP, but note how hard it can be to "undo" 301 redirects!  So, is there any disadvantage to a plain return, like this, instead?
}

server {
    listen      1.1.1.1 ssl;
    server_name <server_name>;
    charset     utf-8;

    ssl_certificate /etc/letsencrypt/live/$server_name/fullchain.pem; # managed by Certbot; use 'certbot renew' to renew; 'certbot certificates' to list
    ssl_certificate_key /etc/letsencrypt/live/$server_name/privkey.pem; # managed by Certbot


    client_max_body_size 0;

    root /home/ohs/um/um;

    location / {
              proxy_set_header Host $http_host;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_redirect off;
              proxy_buffering off;
              proxy_pass http://um;

              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              #proxy_set_header Connection "";

              # proxy_read_timeout defaults to 60 seconds, which results in timeouts on long-wait websocket reads; we need to not timeout! So:
              proxy_read_timeout 60000;
    }

    location /static {
              # path for static files
              alias /home/<dedicated-user>/um/um/static;
              # Note that it's critical to have EVERY directory on the way to static/ files with +x access ... normally missing is /home/<user> directories, by default!  (Just that one directory -- all below and above have g+x by default; if you use a created /var/ dir, or such, then this isn't a problem, by default)
    }

    # favicon and robots (cheats)
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

}

upstream um {
    server unix:/tmp/um/um_1.sock;
	# For the above to work, permissions must be right; added user www-data to group ohs:
	# usermod -a -G ohs www-data
	# Note that supervisor can't run as a user with a non-primary group (so it must run as ohs:ohs), and thus creates the socket as ohs:ohs, but does so with umask 0002 so that group has read-write permissions on the socket
}
